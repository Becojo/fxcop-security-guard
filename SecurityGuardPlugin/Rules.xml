<?xml version="1.0" encoding="utf-8" ?>
<Rules FriendlyName="Security Guard">
  
  <Rule TypeName="SecurityGuard.CommandInjection" Category="SecurityGuard.Injection" CheckId="SG001">
    <Name>Command Injection</Name>
    <Description>Identify command injection</Description>
    <Url/>
    <Resolution>The command execution is suceptible to injection.</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>


  <Rule TypeName="SecurityGuard.WeakRandomGenerator" Category="SecurityGuard.Random" CheckId="SG002">
    <Name>Weak Random Generator</Name>
    <Description>Identify predictable Random generator</Description>
    <Url/>
    <Resolution>
      <![CDATA[
      The class "Random.Random" should not be use to generate secret value.
      <br/>
      References:<br/>
      http://csharpindepth.com/Articles/Chapter12/Random.aspx
    ]]>
    </Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>

  <Rule TypeName="SecurityGuard.ClearTextSocket" Category="SecurityGuard.Communication" CheckId="SG003">
    <Name>Clear Text Communication</Name>
    <Description>Identify clear text communication</Description>
    <Url/>
    <Resolution>TODO</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>

  <Rule TypeName="SecurityGuard.ClearTextHttp" Category="SecurityGuard.Communication" CheckId="SG004">
    <Name>Clear Text Communication</Name>
    <Description>Identify clear text communication for HTTP requests</Description>
    <Url/>
    <Resolution>TODO</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>

  <Rule TypeName="SecurityGuard.WeakCertificateValidation" Category="SecurityGuard.Communication" CheckId="SG005">
    <Name>Weak Certificate Validation</Name>
    <Description>Identify HTTPS communication where the certificate validation is ignored or replace by a custom mecanism.</Description>
    <Url/>
    <Resolution>TODO</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>

  <Rule TypeName="SecurityGuard.XPathInjection" Category="SecurityGuard.Injection" CheckId="SG006">
    <Name>XPath Injection</Name>
    <Description>Identify XPath injection</Description>
    <Url/>
    <Resolution>The XPath is build from concatenation. It is suceptible to injection.</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>

  <Rule TypeName="SecurityGuard.WeakHashing" Category="SecurityGuard.Crypto" CheckId="SG007">
    <Name>Weak Hashing</Name>
    <Description>Identify weak hashing algorithms</Description>
    <Url/>
    <Resolution>TODO</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>



  <Rule TypeName="SecurityGuard.WeakCipherAlgorithm" Category="SecurityGuard.Crypto" CheckId="SG009">
    <Name>Weak Cipher Algorithm</Name>
    <Description>Identify weak cipher algorithms</Description>
    <Url/>
    <Resolution>TODO</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>

  <Rule TypeName="SecurityGuard.VisitMe" Category="SecurityGuard.Debug" CheckId="SG000">
    <Name>Tracing Class</Name>
    <Description>Trace the values sent to the visitor methods..</Description>
    <Url/>
    <Resolution></Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>Breaking</FixCategories>
    <Email />
    <Owner />
  </Rule>

</Rules>